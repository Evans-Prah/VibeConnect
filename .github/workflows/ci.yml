## This workflow will build a .NET project
## For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net
#
#name: ci-build
#
#on:
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]
#
#jobs:
#  build:
#
#    runs-on: ubuntu-latest
#    
#    # Service containers to run with `container-job`
#    services:
#      postgres:
#        image: postgres:14
#        env:
#          POSTGRES_USER: postgres
#          POSTGRES_PASSWORD: postgres
#          POSTGRES_DB: VibeConnect
#        ports:
#          - 5432:5432
#        # Set health checks to wait until postgres has started
#        options: >-
#          --health-cmd pg_isready
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5
#    steps:
#      - uses: actions/checkout@v3
#      - name: Setup .NET
#        uses: actions/setup-dotnet@v3
#        with:
#          dotnet-version: 8.0.x
#      - name: Restore dependencies
#        run: dotnet restore
#      - name: Build
#        run: dotnet build --no-restore
#      - name: Replace values in JSON file
#        uses: tnikFi/json-file-transform@v1
#        with:
#          files: '**/appsettings.json'
#          key-value-pairs: |
#            ConnectionStrings.DefaultConnection=${{ secrets.DB_CONNECTION_STRING }}
#            Logging.LogLevel.Default=Information
#            AllowedHosts=localhost
#
#      - name: Test
#        run: dotnet test --no-build --verbosity normal

name: CI Build and Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: VibeConnect
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Test
        run: dotnet test --no-build --verbosity normal

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract version tag
        id: vars
        run: echo "VERSION=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/vibeconnect:${{ env.VERSION }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/vibeconnect:${{ env.VERSION }}
        env:
          VERSION: ${{ env.VERSION }}
